<!DOCTYPE html>
<html>
<head>
  <title>Voting Results</title>
  <link rel="stylesheet" href="/css/style.css">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels"></script>
  <style>
    body {
      background: #f5f5f5;
      font-family: 'Segoe UI', sans-serif;
    }
    .results-container {
      max-width: 900px;
      margin: 40px auto;
      padding: 20px;
      background: white;
      border-radius: 12px;
      box-shadow: 0 3px 10px rgba(0,0,0,0.1);
    }
    .category-card {
      margin-bottom: 40px;
      background: #fff;
      padding: 20px;
      border-radius: 10px;
      box-shadow: 0 2px 6px rgba(0,0,0,0.08);
    }
    .category-card h3 {
      text-align: center;
      margin-bottom: 15px;
    }
    .chart-container {
      margin-top: 15px;
    }
    .toggle-btn {
      padding: 6px 12px;
      border: none;
      border-radius: 6px;
      background-color: #0066cc;
      color: white;
      cursor: pointer;
      font-size: 14px;
      float: right;
      transition: 0.3s;
    }
    .toggle-btn:hover {
      background-color: #004a99;
    }
    table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 10px;
    }
    th, td {
      padding: 8px;
      border: 1px solid #ddd;
      text-align: center;
    }
    th {
      background: #f9f9f9;
    }
  </style>
</head>
<body>
  <%- include('../partials/studentHeader') %>

  <div class="results-container">
    <h2 style="text-align:center;">üó≥Ô∏è Voting Results</h2>

    <% results.forEach((r, index) => { %>
      <div class="category-card">
        <button class="toggle-btn" id="toggle-<%= index %>" data-type="bar">Switch to Pie</button>
        <h3><%= r.category %></h3>
        
        <table>
          <thead><tr><th>Photo</th><th>Candidate</th><th>Votes</th></tr></thead>
          <tbody>
            <% r.candidates.forEach(c => { %>
              <tr>
                <td><img src="<%= c.photo_url || '/images/default.png' %>" width="50" height="50" style="border-radius:50%"></td>
                <td><%= c.name %></td>
                <td><%= c.votes %></td>
              </tr>
            <% }) %>
          </tbody>
        </table>

        <div class="chart-container">
          <canvas id="chart-<%= index %>" height="200"></canvas>
        </div>
      </div>
    <% }) %>
  </div>

  <script>
    const results = <%- JSON.stringify(results) %>;
    const charts = [];

    function createChart(ctx, type, labels, data, title) {
      const numericData = data.map(v => Number(v) || 0);
      return new Chart(ctx, {
        type,
        data: {
          labels,
          datasets: [{
            label: title,
            data: numericData,
            backgroundColor: [
              '#007bff', '#28a745', '#ffc107', '#dc3545',
              '#6610f2', '#20c997', '#fd7e14', '#6f42c1'
            ]
          }]
        },
        options: {
          responsive: true,
          plugins: {
            legend: { position: 'bottom' },
            datalabels: {
              color: '#000',
              font: { weight: 'bold' },
              formatter: (value, ctx) => {
                const total = ctx.chart.data.datasets[0].data.reduce((a,b) => a+b, 0);
                if (total === 0) return "0%";
                return type === 'pie' ? ((value / total * 100).toFixed(1) + '%') : value;
              }
            }
          },
          scales: type === 'bar' ? { y: { beginAtZero: true } } : {}
        },
        plugins: [ChartDataLabels]
      });
    }

    results.forEach((r, i) => {
      const ctx = document.getElementById(`chart-${i}`).getContext("2d");
      const labels = r.candidates.map(c => c.name);
      const data = r.candidates.map(c => c.votes);
      let chart = createChart(ctx, "bar", labels, data, r.category);
      charts.push(chart);

      const toggleBtn = document.getElementById(`toggle-${i}`);
      toggleBtn.addEventListener("click", () => {
        const current = toggleBtn.dataset.type;
        chart.destroy();
        const newType = current === "bar" ? "pie" : "bar";
        chart = createChart(ctx, newType, labels, data, r.category);
        charts[i] = chart;
        toggleBtn.dataset.type = newType;
        toggleBtn.textContent = newType === "bar" ? "Switch to Pie" : "Switch to Bar";
      });
    });
  </script>
</body>
</html>
